version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --list --bootstrap-server kafka:9092"]
      interval: 10s
      timeout: 5s
      retries: 3

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
    networks:
      - kafka-network

  init-kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: init-kafka
    command: >
      bash -c "
      kafka-topics --create --topic topic1 --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1;
      kafka-topics --create --topic topic2 --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1;
      "
    networks:
      - kafka-network
    restart: on-failure
    depends_on:
      kafka:
        condition: service_healthy

networks:
  kafka-network:
    driver: bridge
